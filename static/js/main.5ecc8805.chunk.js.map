{"version":3,"sources":["componets/LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["LoginForm","formik","useFormik","initialValues","name","email","birthday","city","country","onSubmit","values","onSubmitprops","console","log","resetForm","validate","errors","className","src","id","handleSubmit","type","getFieldProps","touched","class","disabled","isValid","isSubmitting","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAIe,SAASA,IAGxB,IA+CQC,EAASC,YAAU,CACrBC,cAhDgB,CACdC,KAAK,GACLC,MAAM,GACNC,SAAS,GACTC,KAAK,GACLC,QAAQ,IA4CVC,SAzCgB,SAACC,EAAOC,GACtBC,QAAQC,IAAI,aAAaH,GACzBC,EAAcG,aAwChBC,SApCgB,SAAAL,GACd,IAAIM,EAAS,GA2Bb,OAzBIN,EAAON,OACPY,EAAOZ,KAAO,oBAGdM,EAAOL,QACPW,EAAOX,MAAQ,qBAOfK,EAAOJ,WACPU,EAAOV,SAAW,YAGlBI,EAAOH,OACPS,EAAOT,KAAO,oBAGdG,EAAOF,UACPQ,EAAOR,QAAU,uBAIdQ,KAiBX,OACI,mCACI,qBAAKC,UAAU,aAAf,SACI,sBAAKA,UAAU,WAAf,UAEI,qBAAKC,IAAI,iLAAiLC,GAAG,WAC7L,sBAAKF,UAAU,cAAf,UACI,8CACA,qDAGJ,sBAAMR,SAAUR,EAAOmB,aAAvB,SACI,+BACA,+BAAI,yCACJ,mCAAOC,KAAK,OAAOjB,KAAK,OAAOe,GAAG,QAE9BlB,EAAOqB,cAAc,UAE1BrB,EAAOsB,QAAQnB,MAAQH,EAAOe,OAAOZ,KAAQ,qBAAKa,UAAU,SAAf,SAAyBhB,EAAOe,OAAOZ,OAAgB,QAEnG,mCAAK,0CACL,mCAAOiB,KAAK,QAAQjB,KAAK,SAErBH,EAAOqB,cAAc,WACvBrB,EAAOsB,QAAQlB,OAASJ,EAAOe,OAAOX,MAAS,qBAAKY,UAAU,SAAf,SAAyBhB,EAAOe,OAAOX,QAAgB,QAGvG,qBAAIc,GAAG,OAAP,UAAc,kDACf,mCAAOE,KAAK,OAAOF,GAAG,WAAWf,KAAK,YAElCH,EAAOqB,cAAc,iBACvBrB,EAAOsB,QAAQjB,UAAYL,EAAOe,OAAOV,SAAY,qBAAKW,UAAU,SAAf,SAAyBhB,EAAOe,OAAOV,WAAmB,KAGjH,+BAAI,yCACJ,mCAAOe,KAAK,OAAOjB,KAAK,OAAOe,GAAG,QAE9BlB,EAAOqB,cAAc,aACzBrB,EAAOsB,QAAQhB,MAAQN,EAAOe,OAAOT,KAAQ,qBAAKU,UAAU,SAAf,SAAyBhB,EAAOe,OAAOT,OAAe,KAGnG,mCAAK,4CACL,mCAAOc,KAAK,UAAUjB,KAAK,UAAUe,GAAG,WAEpClB,EAAOqB,cAAc,gBAC1BrB,EAAOsB,QAAQf,SAAWP,EAAOe,OAAOR,QAAW,qBAAKS,UAAU,SAAf,SAAyBhB,EAAOe,OAAOR,UAAkB,KAI3G,wBAAQa,KAAK,OAAOG,MAAM,yBAAyBL,GAAG,OACtDM,UAAWxB,EAAOyB,SAAUzB,EAAO0B,aADnC,oBAEA,+BAAM,2ECxGfC,MATf,WACE,OACE,mCACE,cAAC5B,EAAD,OCKS6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5ecc8805.chunk.js","sourcesContent":["import React from 'react'\r\nimport './style.css'\r\nimport {useFormik} from 'formik'\r\n\r\nexport default function LoginForm() {\r\n   \r\n   \r\nconst initialValues = {\r\n        name:\"\",\r\n        email:\"\",\r\n        birthday:\"\",\r\n        city:\"\",\r\n        country:\"\",\r\n    }\r\n\r\n    const onSubmit =  (values,onSubmitprops) => {\r\n        console.log(\"valuse is:\",values)\r\n        onSubmitprops.resetForm();\r\n}\r\n\r\n\r\n     const validate = values => {\r\n        let errors = {}\r\n\r\n        if(!values.name){\r\n            errors.name = \"Name is Requried\"\r\n        }\r\n\r\n        if(!values.email){\r\n            errors.email = \"Email is Requried\"\r\n        } \r\n        \r\n\r\n        //else if(! /^[a-zA-Z0-9]+@+[a-zA-Z0-9]+.+[A-z]/(values.email)){\r\n            //error.name = \"Invalid Email\"\r\n\r\n        if(!values.birthday){\r\n            errors.birthday = \"Requried\"\r\n        }\r\n\r\n        if(!values.city){\r\n            errors.city = \"City is Requried\"\r\n        }\r\n\r\n        if(!values.country){\r\n            errors.country = \"Country is Requried\"\r\n        }\r\n\r\n\r\n        return errors;\r\n  }\r\n\r\n\r\n\r\n  const formik = useFormik({\r\n      initialValues,\r\n      onSubmit,\r\n      validate \r\n})\r\n  \r\n  //console.log(\"values is:\",formik.values)\r\n        \r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container1\">\r\n                <div className=\"content1\">\r\n               \r\n                    <img src=\"https://images.unsplash.com/photo-1554646375-7bd5eedf4dae?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Nzl8fHBob3RvZ3JhcGh5fGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\" id=\"image1\" />\r\n                    <div className=\"header-name\">\r\n                        <h2>Registration</h2>\r\n                        <p>CLICK FOR TOUR SHOOT</p>\r\n                   \r\n\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <ul>\r\n                        <li><label>Name</label>\r\n                        <input type=\"text\" name=\"name\" id=\"name\"\r\n                        //onChange={formik.handleChange} value={formik.values.name}   onBlur={formik.handleBlur} \r\n                        {...formik.getFieldProps('name')}  />\r\n                        \r\n                      {formik.touched.name && formik.errors.name ? (<div className=\"errors\">{formik.errors.name}</div> ) : null}</li>\r\n\r\n                        <li> <label>Email</label>\r\n                        <input type=\"email\" name=\"email\"\r\n                        //onChange={formik.handleChange} value={formik.values.email}  onBlur={formik.handleBlur}\r\n                        {...formik.getFieldProps('email')}/>\r\n                        { formik.touched.email && formik.errors.email ? (<div className=\"errors\">{formik.errors.email}</div>) : null}</li>\r\n\r\n                        \r\n                         <li id=\"date\"><label>Date of Birth</label>\r\n                        <input type=\"date\" id=\"birthday\" name=\"birthday\"\r\n                        //onChange={formik.handleChange} value={formik.values.birthday}  onBlur={formik.handleBlur}\r\n                        {...formik.getFieldProps('birthday')}/></li>\r\n                        { formik.touched.birthday && formik.errors.birthday ? (<div className=\"errors\">{formik.errors.birthday}</div>) : null}\r\n\r\n\r\n                        <li><label>city</label>\r\n                        <input type=\"list\" name=\"city\" id=\"city\"\r\n                        //onChange={formik.handleChange} value={formik.values.city}   onBlur={formik.handleBlur}\r\n                        {...formik.getFieldProps('city')}/></li>\r\n                       {formik.touched.city && formik.errors.city ? (<div className=\"errors\">{formik.errors.city}</div>) : null}\r\n\r\n\r\n                        <li> <label>Country</label>\r\n                        <input type=\"country\" name=\"country\" id=\"country\"\r\n                        //onChange={formik.handleChange} value={formik.values.country}   onBlur={formik.handleBlur} \r\n                        {...formik.getFieldProps('country')}/></li>\r\n                      {formik.touched.country && formik.errors.country ? (<div className=\"errors\">{formik.errors.country}</div>) : null}\r\n\r\n\r\n\r\n                        <button type=\"btnn\" class=\"btn btn-primary btn-sm\" id=\"btn1\"\r\n                        disabled={!formik.isValid ||formik.isSubmitting}>Submit</button>\r\n                        <span><h6>Have an Account? Sign In</h6></span>\r\n\r\n                        </ul>\r\n                    </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import './App.css';\nimport LoginForm from \"./componets/LoginForm.js\";\n\n\nfunction App() {\n  return (\n    <>\n      <LoginForm/>      \n  \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}